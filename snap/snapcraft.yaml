name: multipass
title: Multipass
icon: data/multipass.gui.svg
summary: Instant Ubuntu VMs
description: |
  Multipass is a tool to launch and manage VMs on Windows, Mac and Linux that
  simulates a cloud environment with support for cloud-init. Get Ubuntu
  on-demand with clean integration to your IDE and version control on your
  native platform.
license: GPL-3.0

adopt-info: multipass
confinement: strict
base: core22

layout:
  /usr/lib/$CRAFT_ARCH_TRIPLET/qemu:
    bind: $SNAP/usr/lib/$CRAFT_ARCH_TRIPLET/qemu
  /usr/share/X11:
    bind: $SNAP/usr/share/X11
  /etc/fonts:
    bind: $SNAP/etc/fonts
  /usr/share/fonts:
    bind: $SNAP/usr/share/fonts
  /usr/share/icons:
    bind: $SNAP/usr/share/icons

environment:
  # GDK pixbuf
  GDK_PIXBUF_MODULEDIR: $SNAP/usr/lib/${CRAFT_ARCH_TRIPLET}/gdk-pixbuf-2.0/2.10.0/loaders
  GDK_PIXBUF_MODULE_FILE: $SNAP_COMMON/loaders.cache
  ARCH_TRIPLET: ${CRAFT_ARCH_TRIPLET}

plugs:
  all-home:
    interface: home
    read: all

apps:
  multipassd:
    command: bin/launch-multipassd
    environment:
      LD_LIBRARY_PATH: &library-path
        $SNAP/lib:$SNAP/lib/$CRAFT_ARCH_TRIPLET:$SNAP/usr/lib:$SNAP/usr/lib/$CRAFT_ARCH_TRIPLET
      PATH: &path
        $SNAP/usr/sbin:$SNAP/usr/bin:$SNAP/sbin:$SNAP/bin:$PATH
      QT_PLUGIN_PATH: $SNAP/usr/lib/$CRAFT_ARCH_TRIPLET/qt5/plugins
      XDG_DATA_HOME: $SNAP_COMMON/data
      XDG_CACHE_HOME: $SNAP_COMMON/cache
      XDG_CONFIG_HOME: &daemon-config $SNAP_DATA/config
      DAEMON_CONFIG_HOME: *daemon-config # temporary
    daemon: simple
    stop-timeout: 5m
    plugs:
      - all-home
      - firewall-control
      - kvm
      - libvirt
      - multipass-support
      - network-bind
      - network-control
      - network-manager # for bridge creation
      - network-observe # for network listing (to read `/sys/devices/**/net/*`)
      - lxd
      - removable-media
      - system-observe  # to read the host's os-release
  multipass:
    environment:
      <<: &client-environment
        LD_LIBRARY_PATH: *library-path
        PATH: *path
        QT_PLUGIN_PATH: $SNAP/usr/lib/$CRAFT_ARCH_TRIPLET/qt5/plugins
        XDG_DATA_HOME: $SNAP_USER_DATA/data
        XDG_DATA_DIRS: $SNAP/usr/share:$SNAP_DATA/data
        XDG_CACHE_HOME: $SNAP_USER_DATA/cache
        XDG_CONFIG_HOME: $SNAP_USER_DATA/config
      DAEMON_CONFIG_HOME: *daemon-config # temporary
    command: bin/launch-multipass
    completer: etc/bash_completion.d/snap.multipass
    plugs:
      - all-home
      - network
  gui:
    environment: *client-environment
    command: bin/launch-multipass-gui
    desktop: usr/share/applications/multipass.gui.desktop
    autostart: multipass.gui.autostart.desktop
    plugs:
      - home
      - network
      - unity7
      - wayland
      - x11
      - system-observe
  desktop-gui:
    extensions: [ gnome ]
    environment: &_client-environment
      XDG_DATA_HOME: $SNAP_USER_DATA
      XDG_DATA_DIRS: $SNAP/usr/share
      GDK_GL: gles
    command: bin/desktop_gui
    plugs:
      - desktop
      - desktop-legacy
      - gsettings
      - network
      - opengl
      - unity7
      - wayland
      - x11

parts:
  libvirt:
    plugin: nil
    stage-packages:
    - libvirt0
    stage:
    - -usr/lib/*/libssh*  # this avoids extra libssh libs in the snap

  multipass:
    plugin: cmake
    build-snaps:
    - cmake
    build-environment:
    - PATH: /snap/bin:$PATH
    build-packages:
    - on arm64: [libgles2-mesa-dev]
    - on armhf: [libgles2-mesa-dev]
    - build-essential
    - git
    - libapparmor-dev
    - libqt5x11extras5-dev
    - libsystemd-dev
    - libssl-dev
    - libvirt-dev
    - pkg-config
    - qtbase5-dev
    - qtbase5-dev-tools
    stage-packages:
    - apparmor
    - on amd64: [libgl1]
    - on armhf: [libgles2-mesa]
    - on arm64: [libgles2-mesa]
    - libc6
    - libpng16-16
    - libqt5core5a
    - libqt5gui5
    - libqt5network5
    - libqt5widgets5
    - libqt5x11extras5
    - libssl3
    - libxml2
    - dnsmasq-base
    - dnsmasq-utils
    - qtwayland5
    source: .
    cmake-parameters:
    - -DCMAKE_BUILD_TYPE=Release
    - -DCMAKE_INSTALL_PREFIX=/
    - -DMULTIPASS_ENABLE_TESTS=off
    - -DMULTIPASS_UPSTREAM=origin
    - -DMULTIPASS_ENABLE_FLUTTER_GUI=off
    override-build: |
      craftctl default
      set -e
      mkdir -p ${CRAFT_PART_INSTALL}/etc/bash_completion.d/
      echo 'export PATH="${PATH}:/snap/bin:/var/lib/snapd/snap/bin"' > ${CRAFT_PART_INSTALL}/etc/bash_completion.d/snap.multipass
      cat ../src/completions/bash/multipass >> ${CRAFT_PART_INSTALL}/etc/bash_completion.d/snap.multipass
      VERSION=$( awk -F\" '/version_string/ { print $2 }' gen/multipass/version.h )
      craftctl set version=${VERSION}
      craftctl set grade=$( echo ${VERSION} | grep -qe '^[0-9]\+\.[0-9]\+\.[0-9]\+\($\|-rc\)' && echo stable || echo devel )
      sed -i -e 's@^Icon=\(.\+\)$@Icon=/usr/share/icons/hicolor/scalable/apps/\1.svg@' ${CRAFT_PART_INSTALL}/usr/share/applications/multipass.gui.desktop

      cd ${CRAFT_PART_SRC}/3rd-party
      find . -name 'LICENSE*' -print0 | xargs -0 -I FILE install --mode=644 -D --no-target-directory FILE ${CRAFT_PART_INSTALL}/licenses/FILE

  qemu:
    build-environment:
    - LD_LIBRARY_PATH: ""
    - XDG_DATA_DIRS: /root/stage/usr/share:/usr/share
    - PKG_CONFIG_PATH: ""
    source: https://github.com/canonical/qemu.git
    source-type: git
    source-branch: multipass-7.2.0+9p-uid-gid-map
    source-depth: 1
    source-submodules: []
    plugin: autotools
    autotools-configure-parameters:
    - --enable-virtfs
    - --enable-virtiofsd
    - --disable-bochs
    - --disable-cloop
    - --disable-docs
    - --disable-guest-agent
    - --disable-parallels
    - --disable-qed
    - --disable-libiscsi
    - --disable-vnc
    - --disable-xen
    - --disable-dmg
    - --disable-replication
    - --disable-hax
    - --disable-snappy
    - --disable-lzo
    - --disable-live-block-migration
    - --disable-vvfat
    - --disable-curl
    - --disable-tests
    - --disable-nettle
    - --disable-libusb
    - --disable-bzip2
    - --disable-gcrypt
    - --disable-gnutls
    - --disable-slirp
    - --disable-user
    - --disable-libvduse
    - --disable-vduse-blk-export
    - --firmwarepath=/snap/multipass/current/qemu/
    - --prefix=/usr
    - --libdir=/usr/lib/$CRAFT_ARCH_TRIPLET
    - --libexecdir=/usr/lib/qemu
    - --enable-strip
    build-packages:
    - libattr1-dev
    - libcap-ng-dev
    - libglib2.0-dev
    - libpixman-1-dev
    - libseccomp-dev
    - meson
    stage-packages:
    - libpixman-1-0
    stage:
    - -usr/lib/*/libssh*
    - -qemu/efi-*.rom
    - -qemu/pxe-*.rom
    organize:
      usr/lib/qemu/*: usr/bin/
      usr/share/qemu/*: qemu/
    override-pull: |-
      [ "$(uname -m)" != "x86_64" ] && [ "$(uname -m)" != "aarch64" ] && exit 0

      craftctl default
    override-build: |-
      [ "$(uname -m)" != "x86_64" ] && [ "$(uname -m)" != "aarch64" ] && exit 0

      set -ex
      # Mangle the configure a bit
      QEMUARCH="$(uname -m)"
      sed -i "s/^unset target_list$/target_list=\"${QEMUARCH}-softmmu\"/" configure

      patch -p1 < "${CRAFT_PROJECT_DIR}/snap/local/patches/define-ubuntu-machine-types.patch"

      set +ex
      craftctl default
    prime:
    - usr/bin/qemu-system-*
    - usr/bin/qemu-img*
    - usr/bin/virtfs-proxy-helper*
    - usr/bin/virtiofsd*
    - usr/lib/$CRAFT_ARCH_TRIPLET/*
    - lib/*/libpixman*so*
    - qemu/keymaps*
    - qemu/efi-virtio.rom*
    - qemu/kvmvapic.bin*
    - qemu/vgabios-*.bin*
    - qemu/slof.bin*
    - qemu/bios-256k.bin*

  qemu-firmware:
    plugin: nil
    override-pull: ""
    stage-packages:
    - ipxe-qemu
    - on amd64: [ovmf]
    - on armhf: [qemu-efi]
    - on arm64: [qemu-efi]
    organize:
      usr/share/ovmf/*: qemu/
      usr/lib/ipxe/qemu/*: qemu/
      usr/share/qemu-efi-aarch64/*: qemu/
    prime:
    - qemu/*

  kvm-support:
    plugin: nil
    override-pull: ""
    stage-packages:
    - on amd64: [msr-tools]

  terminal:
    plugin: nil
    stage-packages:
      - xfce4-terminal
      - dmz-cursor-theme
      - libgdk-pixbuf2.0-bin # GDK pixbuf
      - fonts-freefont-ttf
      - libglib2.0-0
    override-build: |
      craftctl default
      update-mime-database $CRAFT_PART_INSTALL/usr/share/mime
      rm -f $CRAFT_PART_INSTALL/usr/share/applications/exo-*
      mkdir -p $CRAFT_PART_INSTALL/usr/share/icons/default/
      echo "[Icon Theme]" > $CRAFT_PART_INSTALL/usr/share/icons/default/index.theme
      echo "Inherits=DMZ-White" >> $CRAFT_PART_INSTALL/usr/share/icons/default/index.theme
    stage:
      - -usr/share/doc
    organize:
      usr/bin/xfce4-terminal.wrapper: bin/x-terminal-emulator

  glue:
    plugin: dump
    source: snap-wrappers

  desktop-gui:
    plugin: flutter
    source: ./src/client/desktop_gui
    flutter-channel: stable
    flutter-target: lib/main.dart
    organize:
      /root/parts/desktop-gui/build/build/linux/x64/release/bundle: bin/
